/*
 * This build file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Java Library project to get you started.
 * For more details take a look at the Java Libraries chapter in the Gradle
 * user guide available at https://docs.gradle.org/3.5/userguide/java_library_plugin.html
 */

// Apply the java-library plugin to add support for Java Library
apply plugin: 'java'
apply plugin: 'eclipse-wtp'
apply plugin: 'war'

webAppDirName='src/main/webapp'

// In this section you declare where to find the dependencies of your project
repositories {
    // Use jcenter for resolving your dependencies.
    // You can declare any Maven/Ivy/file repository here.
    mavenCentral()
}

eclipse {
    // 빌드하고나면 프로젝트정보도 같이 지워지는데, Gradle프로젝트임을 인식시켜줍니다.
    project.natures "org.springsource.ide.eclipse.gradle.core.nature"
    wtp {
        facet {
            facet name: 'jst.web', version: '3.1'
            facet name: 'jst.java', version: '1.8'
        }
    }
}

dependencies {
    // This dependency is exported to consumers, that is to say found on their compile classpath.

    def tomcatVersion = '8.0.23'
    compile "org.apache.tomcat.embed:tomcat-embed-core:${tomcatVersion}",
           "org.apache.tomcat.embed:tomcat-embed-logging-juli:${tomcatVersion}"
    compile("org.apache.tomcat.embed:tomcat-embed-jasper:${tomcatVersion}") {
        exclude group: 'org.eclipse.jdt.core.compiler', module: 'ecj'
    }
	compile('javax.servlet:jstl:1.2')
	
    compile "org.springframework:spring-webmvc:4.3.4.RELEASE"
    compile 'cglib:cglib-nodep:2.2.2'
    compile 'ch.qos.logback:logback-classic:1.0.6'

    compile 'org.slf4j:slf4j-api:1.7.21'
    compile 'org.slf4j:jcl-over-slf4j:1.7.21'
    compile 'ch.qos.logback:logback-classic:1.1.7'

	compile group: 'org.apache.commons', name: 'commons-lang3', version: '3.0'
	// https://mvnrepository.com/artifact/commons-io/commons-io
	compile group: 'commons-io', name: 'commons-io', version: '2.4'
	
	
	//spring framework
	
    compile('org.springframework:spring-context:4.3.4.RELEASE') {
    	exclude group: 'commons-logging', module: 'commons-logging'
    }
    // https://mvnrepository.com/artifact/org.springframework.security/spring-security-core
	compile group: 'org.springframework.security', name: 'spring-security-core', version: '4.2.6.RELEASE'
	// https://mvnrepository.com/artifact/org.springframework/spring-web
	compile group: 'org.springframework', name: 'spring-web', version: '4.3.4.RELEASE'

    
    compile("org.springframework:spring-jdbc:4.3.4.RELEASE")
    compile group: 'org.apache.commons', name: 'commons-dbcp2', version: '2.1.1'
    compile group: 'com.strategicgains', name: 'RestExpress', version: '0.11.3'
    
    compile("org.mybatis.spring.boot:mybatis-spring-boot-starter:1.1.1")

    compileJava.options.encoding = 'UTF-8'
}

task deployToTomcat(dependsOn: 'war') << {
    copy {
        from war.archivePath
        into "/data/apache-tomcat-8.0.23/webapps"
    }
}

 
[compileJava, compileTestJava]*.options*.encoding = 'UTF-8' // 인코딩 UTF-8로 통일합니다.
 
test {
    systemProperties 'property': 'value'
}
 
uploadArchives {
    repositories {
       flatDir {
           dirs 'repos'
       }
    }
}
